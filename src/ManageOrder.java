
import Common.OpenPdf;
import static Common.OpenPdf.OpenById;
import Dao.ConnectionProvider;
import Dao.InventoryUtils;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.management.modelmbean.ModelMBean;
import javax.swing.table.TableModel;
import jdk.jfr.Description;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import com.itextpdf.text.pdf.PdfPTable;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author moluh
 */
public class ManageOrder extends javax.swing.JFrame {
    
    private int customerPk = 0;
    private int productPk = 0;
    private Double TotalPrice = 0.0;
    private String orderId = "";

    /**
     * Creates new form ManageOrder
     */
    public ManageOrder() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    private void clearProductFields(){
        productPk = 0;
        txtProdName.setText("");
        txtDesc.setText("");
        numP.setText("");
        numQ.setText("");
    }
    
    public String getUniqueId(String prefix){
        return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerListTab = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        prodListTab = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtMobile = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtProdName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        numP = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        numQ = new javax.swing.JTextField();
        btnAddCart = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        lblTotalPrice = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        cartTab = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Impact", 1, 36)); // NOI18N
        jLabel1.setText("ORDER MANAGEMENT");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Customer List");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Product List");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(636, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Cart");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 90, -1, -1));

        CustomerListTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Mobile Number", "Email"
            }
        ));
        CustomerListTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerListTabMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CustomerListTab);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 129, 330, 232));

        prodListTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductID", "ProductName", "Description", "Brand", "Price", "Quantity", "BottleSize", "CategoryID", "CategoryName"
            }
        ));
        prodListTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prodListTabMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(prodListTab);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 129, -1, 232));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Selected Customer");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 386, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 416, -1, -1));

        txtName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 444, 330, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Mobile Number");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 479, -1, -1));

        txtMobile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 507, 330, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Email");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 542, -1, -1));

        txtEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 570, 330, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Selected Product");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 386, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Product Name");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 416, -1, -1));

        txtProdName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtProdName, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 444, 452, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Description");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 479, -1, -1));

        txtDesc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 507, 452, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Price");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 542, -1, -1));

        numP.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(numP, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 570, 452, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Order Quantity");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 605, -1, -1));

        numQ.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(numQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 633, 452, -1));

        btnAddCart.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddCart.setText("Add To Cart");
        btnAddCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 673, 452, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setText("Total Amount RS :");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(982, 379, -1, -1));

        lblTotalPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTotalPrice.setText("00000");
        getContentPane().add(lblTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1143, 379, -1, -1));

        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setText("Save Order");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(982, 444, 348, -1));

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setText("Reset");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(982, 507, 348, -1));

        btnClose.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(982, 570, 348, -1));

        cartTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductID", "Name", "Quantity", "Price", "Description", "Sub Total"
            }
        ));
        cartTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTabMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(cartTab);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(974, 129, 356, 232));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background.jpg"))); // NOI18N
        jLabel16.setPreferredSize(new java.awt.Dimension(1366, 768));
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        txtName.setEditable(false);
        txtMobile.setEditable(false);
        txtEmail.setEditable(false);
        
        txtProdName.setEditable(false);
        txtDesc.setEditable(false);
        numP.setEditable(false);
        
        DefaultTableModel model = (DefaultTableModel) CustomerListTab.getModel();
        DefaultTableModel prodmodel = (DefaultTableModel) prodListTab.getModel();
        
        try{
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select * from customer");
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getString("ID"),rs.getString("Name"),rs.getString("Mobile"),rs.getString("Email")});
            }
            
            rs = st.executeQuery("Select * from products inner join category on products.Category = category.CategoryID");
            while(rs.next()){
                prodmodel.addRow(new Object[]{rs.getString("ProductID"),rs.getString("ProductName"),rs.getString("Description"),rs.getString("Brand"),rs.getString("Price"), rs.getString("Quantity"),rs.getString("BottleSize"),rs.getString("Category"),rs.getString(10)});
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ManageOrder().setVisible(true);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void CustomerListTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerListTabMouseClicked
        // TODO add your handling code here:
        int index = CustomerListTab.getSelectedRow();
        TableModel model = CustomerListTab.getModel();

        String ID = model.getValueAt(index, 0).toString();
        customerPk = Integer.parseInt(ID);
        String Name = model.getValueAt(index, 1).toString();
        txtName.setText(Name);
        String Mobile = model.getValueAt(index, 2).toString();
        txtMobile.setText(Mobile);
        String Email = model.getValueAt(index, 3).toString();
        txtEmail.setText(Email);
    }//GEN-LAST:event_CustomerListTabMouseClicked

    private void prodListTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodListTabMouseClicked
        // TODO add your handling code here:
        int index = prodListTab.getSelectedRow();
        TableModel model = prodListTab.getModel();

        String ID = model.getValueAt(index, 0).toString();
        productPk = Integer.parseInt(ID);

        String Name = model.getValueAt(index, 1).toString();
        txtProdName.setText(Name);
        String Desc = model.getValueAt(index, 2).toString();
        txtDesc.setText(Desc);
        String Price = model.getValueAt(index, 4).toString();
        numP.setText(Price);
        /*String Qty = model.getValueAt(index, 5).toString();
        totalQty = 0;
        lblQ.setText("Add quantity");
        totalQty = Integer.parseInt(Qty);
        String size = model.getValueAt(index, 6).toString();
        txtSize.setText(size);*/
    }//GEN-LAST:event_prodListTabMouseClicked

    private void btnAddCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCartActionPerformed
        // TODO add your handling code here:
        String NoOfUnits = numQ.getText();
        if(!NoOfUnits.equals("")){
            int desiredUnits = Integer.parseInt(NoOfUnits);
            String ProductName = txtProdName.getText();
            String Desc = txtDesc.getText();
            String Price = numP.getText();
            
            Double totalPrice = Integer.parseInt(numQ.getText()) * Double.parseDouble(Price);
            
            int checkStock = 0;
            int checkProdInCart = 0;
            
            try{
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("Select * from products where ProductID="+productPk+"");
                while(rs.next()){
                    if(rs.getInt("Quantity") >= desiredUnits){
                        checkStock = 1;
                    } else{
                        JOptionPane.showMessageDialog(null, "Product out of stock. Only "+rs.getInt("Quantity")+" left");
                    }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            
            if(checkStock == 1){
                DefaultTableModel model = (DefaultTableModel) cartTab.getModel();
                if(cartTab.getRowCount()!= 0){
                    for(int i = 0; i < cartTab.getRowCount();i++){
                        if(Integer.parseInt(model.getValueAt(i, 0).toString()) == productPk ){
                            checkProdInCart = 1;
                            JOptionPane.showMessageDialog(null, "Product already exist in cart");
                        }
                   
                    }
                }
                
                if(checkProdInCart == 0){
                    model.addRow(new Object[]{productPk,ProductName,NoOfUnits,Price,Desc,totalPrice});
                    TotalPrice =  TotalPrice + totalPrice;
                    lblTotalPrice.setText(String.valueOf(TotalPrice));
                    JOptionPane.showMessageDialog(null, "Added successfully to cart");
                }
                clearProductFields();
            }
            
        } else{
            JOptionPane.showMessageDialog(null, "The Quantity and product fields are required!");
        }
    }//GEN-LAST:event_btnAddCartActionPerformed

    private void cartTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTabMouseClicked
        // TODO add your handling code here:
        int index = cartTab.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do you want to remove this product","Select",JOptionPane.YES_NO_OPTION);
        if(a == 0){
            TableModel model = cartTab.getModel();
            String subTotal = model.getValueAt(index, 5).toString();
            double subTotalDouble = Double.parseDouble(subTotal); 
            TotalPrice = TotalPrice - subTotalDouble;
            lblTotalPrice.setText(String.valueOf(TotalPrice));
            ((DefaultTableModel) cartTab.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_cartTabMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(TotalPrice != 0 && !txtName.getText().equals("")){
            orderId = getUniqueId("Bill-");
            
            DefaultTableModel dtm = (DefaultTableModel) cartTab.getModel();
            if(cartTab.getRowCount() != 0){
                for(int i=0; i<cartTab.getRowCount();i++){
                    try {
                        Connection con = ConnectionProvider.getCon();
                        Statement st = con.createStatement();
                        st.executeUpdate("UPDATE products SET Quantity = Quantity - "+ Integer.parseInt(dtm.getValueAt(i, 2).toString())+ " WHERE ProductID = "+ Integer.parseInt(dtm.getValueAt(i, 0).toString()));   
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            }
            
            try {
                SimpleDateFormat myFormat = new SimpleDateFormat("DD-MM-YYYY");
                Calendar cal = Calendar.getInstance();
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("insert into orderDetail(orderID,customer_fk,orderDate,totalPaid) values(?,?,?,?)");
                ps.setString(1, orderId);
                ps.setInt(2, customerPk);
                ps.setString(3, myFormat.format(cal.getTime()));
                ps.setDouble(4, TotalPrice);
                ps.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            
            com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
            try{
                SimpleDateFormat myFormat = new SimpleDateFormat("dd-MM-yyyy");
                Calendar cal = Calendar.getInstance();
                PdfWriter.getInstance(doc, new FileOutputStream(InventoryUtils.BillPath+""+orderId+".pdf"));
                doc.open();
                Paragraph projectName = new Paragraph ("                                         WineAndLiquorStockManagement\n");
                doc.add(projectName);
                Paragraph starLine = new Paragraph("****************************************************************************************************************");
                doc.add(starLine);
                Paragraph details = new Paragraph("\tOrder ID: "+orderId+"\nDate: "+myFormat.format(cal.getTime())+"\nTotal paid: "+TotalPrice);
                doc.add(details);
                doc.add(starLine);
                PdfPTable tb1 = new PdfPTable(5);
                PdfPCell nameCell = new PdfPCell(new Phrase("Name"));
                PdfPCell descCell = new PdfPCell(new Phrase("Description"));
                PdfPCell priceCell = new PdfPCell(new Phrase("Price per unit"));
                PdfPCell qtyCell = new PdfPCell(new Phrase("Quantity"));
                PdfPCell subTotalCell = new PdfPCell(new Phrase("sub Total Price"));
                
                BaseColor backGroundColor = new BaseColor(255,204,51);
                nameCell.setBackgroundColor(backGroundColor);
                descCell.setBackgroundColor(backGroundColor);
                priceCell.setBackgroundColor(backGroundColor);
                qtyCell.setBackgroundColor(backGroundColor);
                subTotalCell.setBackgroundColor(backGroundColor);
                
                tb1.addCell(nameCell);
                tb1.addCell(descCell);
                tb1.addCell(priceCell);
                tb1.addCell(qtyCell);
                tb1.addCell(subTotalCell);
                
                for(int i=0; i<cartTab.getRowCount();i++){
                    tb1.addCell(cartTab.getValueAt(i, 1).toString());
                    tb1.addCell(cartTab.getValueAt(i, 4).toString());
                    tb1.addCell(cartTab.getValueAt(i, 3).toString());
                    tb1.addCell(cartTab.getValueAt(i, 2).toString());
                    tb1.addCell(cartTab.getValueAt(i, 5).toString());
                }
                
                doc.add(tb1);
                doc.add(starLine);
                Paragraph thanksMsg = new Paragraph("Thank you for your purchase");
                doc.add(thanksMsg);
                OpenPdf.OpenById(orderId);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            doc.close();
            setVisible(false);
            new ManageOrder().setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "please add some products to cart or select customer");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CustomerListTab;
    private javax.swing.JButton btnAddCart;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JTable cartTab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTotalPrice;
    private javax.swing.JTextField numP;
    private javax.swing.JTextField numQ;
    private javax.swing.JTable prodListTab;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtProdName;
    // End of variables declaration//GEN-END:variables
}
